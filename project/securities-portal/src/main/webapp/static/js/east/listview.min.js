function QueryStringParameter(t) {
    if (this.properties = [],
    "undefined" != typeof t)
        for (var e, r, a = t.split("&"), i = 0; i < a.length; i++)
            a[i] = a[i].split("="),
            e = a[i][0],
            r = a[i][1],
            this[e] = r,
            this.properties.push(e)
}
function DataService(t, e) {
    if (this.charset = e,
    "undefined" == typeof t)
        return this.url = "",
        void (this.parameters = new QueryStringParameter);
    if (t.indexOf("?") > 0) {
        var r = t.substring(t.indexOf("?") + 1);
        r = r.replace(/&amp;/g, "&"),
        this.url = t.substring(0, t.indexOf("?")),
        this.parameters = new QueryStringParameter(r)
    } else
        this.url = t,
        this.parameters = new QueryStringParameter
}
QueryStringParameter.prototype.toQueryString = function() {
    for (var t = this.properties, e = "", r = 0, a = t.length; a > r; r++)
        p = t[r],
        "undefined" != this[p] && "" != this[p] && (e += p + "=" + this[p] + "&");
    return e.length > 0 && (e = e.substring(0, e.length - 1)),
    e
}
,
DataService.prototype.getRequest = function() {
    var t = this.parameters.toQueryString();
    return this.service = this.url + "?" + t,
    this.service
}
,
DataService.prototype.loadData = function(t) {
    var e = this.parameters.jsName
      , r = this.parameters.dataName
      , a = this.getRequest();
    this.cache || (a = a + "&_g=" + Math.random()),
    JsLoader.load(a, this.charset || "utf-8", function() {
        var a = window[e] || {}
          , i = a[r] || a.idsif || a.rank || a.quotation || a.futures || []
          , n = a.pages || 1;
        t(i, n)
    })
}
,
function() {
    function t(e) {
        this.dataServiceUrl = "",
        this.dataService = new DataService,
        this.updateInterval = 0,
        this._render = e,
        this.pageCount = 0,
        this.setInterval = "",
        t.proxy = this
    }
    t.prototype = {
        load: function(t) {
            var e = this;
            e.dataService.loadData(function(r, a) {
                e._renderData(r),
                t && t(a),
                e.onLoadCompleted && e.onLoadCompleted()
            })
        },
        _renderData: function(t) {
            var e = this
              , r = e._render.context || e;
            e._render.call(r, t, e.dataService.parameters)
        },
        _update: function() {
            var t = this;
            t.isTimeZone() && t.dataService.loadData(function(e) {
                t._renderData(e),
                t.onUpdateCompleted && t.onUpdateCompleted()
            })
        },
        isTimeZone: function() {
            return !0
        },
        init: function(e, r) {
            var a = this
              , i = t.proxy;
            if (clearInterval(a.setInterval),
            this.autoUpdate) {
                var n = this.updateInterval;
                a.setInterval = setInterval(function() {
                    a._update()
                }, n)
            }
            this.requestUrl = this.dataService.getRequest();
            var s = document.getElementById("dataSource");
            s && (s.parentNode.removeChild(s),
            s = null),
            2 == arguments.length ? (this.pageCount = r,
            this._renderData(e),
            this.onInitCompleted && this.onInitCompleted()) : this.load(function(e) {
                t.proxy.pageCount = e,
                i.onInitCompleted && i.onInitCompleted()
            })
        },
        dispose: function() {
            this.autoUpdate = !1,
            clearInterval(this.setInterval)
        }
    },
    window.ListView = t
}();
