<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd"
       default-lazy-init="true">
    <description>Spring公共配置文件</description>

    <!--扫描com.包下包含spring 注解的类，自动注入 -->
    <context:component-scan base-package="net.ryian.orm"/>

    <context:property-placeholder
            ignore-unresolvable="true" location="classpath*:/spring/application.properties"/>

    <!-- 单数据源配置开始 -->
    <!--
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="url">
            <value>${jdbc.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <property name="maxActive"><value>20</value></property>
        <property name="filters">
            <value>stat</value>
        </property>
    </bean>
    -->
    <!-- 单数据源配置结束 -->

    <!-- 多数据源配置开始 -->

    <bean id="ds1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="url">
            <value>${jdbc.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <property name="maxActive">
            <value>20</value>
        </property>
    </bean>

    <bean id="ds2" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="url">
            <value>${ds2.jdbc.url}</value>
        </property>
        <property name="username">
            <value>${ds2.jdbc.username}</value>
        </property>
        <property name="password">
            <value>${ds2.jdbc.password}</value>
        </property>
        <property name="maxActive">
            <value>20</value>
        </property>
    </bean>

    <bean id="dataSource" class="net.ryian.orm.service.support.datasource.MultipleDataSource">
        <property name="defaultTargetDataSource" ref="ds1"/>
        <property name="targetDataSources">
            <map>
                <entry value-ref="ds1" key="ds1"/>
                <entry value-ref="ds2" key="ds2"/>
            </map>
        </property>
    </bean>

    <bean id="dataSourceMethodInterceptor" class="net.ryian.orm.service.support.datasource.DataSourceMethodInterceptor"/>

    <bean id="dataSourceMethodCachePointCut" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="dataSourceMethodInterceptor" />
        <property name="patterns">
            <list>
                <value>net.ryian.example.*.service.*Service*\.*.*</value>
            </list>
        </property>
    </bean>
    <!-- 多数据源配置结束 -->


    <!-- 事物管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 事物管理模板 -->
    <bean id="transactionTemplate"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="net.ryian.example"/>
        <property name="properties">
            <value>
                mappers=tk.mybatis.mapper.common.Mapper
            </value>
        </property>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"
                          proxy-target-class="true"/>

    <tx:advice id="readTxAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="query*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="read*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="pc"
                      expression="execution(* net.ryian.orm.service.*.*(..))"/>
        <aop:advisor pointcut-ref="pc" advice-ref="readTxAdvice"/>
    </aop:config>

    <aop:config>
        <aop:pointcut id="webPc" expression="execution(* net.ryian.example.*.service.*.*(..))"/>
        <aop:advisor pointcut-ref="webPc" advice-ref="readTxAdvice"/>
    </aop:config>

</beans>
