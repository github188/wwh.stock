<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="  
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">  
  

  
<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">    
  <property name="maxTotal"  value="${redis.maxTotal}" /> 
     <property name="maxIdle" value="${redis.maxIdle}" /> 
     <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
 </bean>
  
 <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
  <constructor-arg ref="jedisPoolConfig" />
  <constructor-arg value="${redis.host}" />
  <constructor-arg type="int" value="${redis.port}" />
 </bean>
  
 <bean id="jedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
  <property name="hostName"  value="${redis.host}" />
  <property name="port"  value="${redis.port}" />
  <property name="password" value="${redis.pass}"/>
  <property name="timeout"  value="${redis.timeout}" />
  <property name="poolConfig"  ref="jedisPoolConfig" />
  <property name="usePool"  value="true" />
 </bean>
  
 <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
  <property name="connectionFactory" ref="jedisConnFactory"/>
 </bean>
</beans>  